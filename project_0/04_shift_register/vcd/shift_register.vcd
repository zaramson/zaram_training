$date
	Tue Jul  2 16:49:02 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module shift_register_tb $end
$var wire 1 ! o_Sout $end
$var wire 8 " o_Qout [7:0] $end
$var reg 1 # i_Clk $end
$var reg 8 $ i_D [7:0] $end
$var reg 1 % i_Load $end
$var reg 1 & i_Sin $end
$var reg 256 ' taskState [255:0] $end
$var reg 256 ( vcd_file [255:0] $end
$var integer 32 ) i [31:0] $end
$scope module u_shift_register $end
$var wire 1 # i_Clk $end
$var wire 8 * i_D [7:0] $end
$var wire 1 % i_Load $end
$var wire 1 & i_Sin $end
$var wire 1 ! o_Sout $end
$var wire 8 + o_Qout [7:0] $end
$scope module u_mux_dff_0 $end
$var wire 1 # i_clk $end
$var wire 1 & i_in0 $end
$var wire 1 , i_in1 $end
$var wire 1 % i_sel $end
$var wire 1 - w_mux_out $end
$var reg 1 . o_out $end
$upscope $end
$scope module u_mux_dff_1 $end
$var wire 1 # i_clk $end
$var wire 1 / i_in0 $end
$var wire 1 0 i_in1 $end
$var wire 1 % i_sel $end
$var wire 1 1 w_mux_out $end
$var reg 1 2 o_out $end
$upscope $end
$scope module u_mux_dff_2 $end
$var wire 1 # i_clk $end
$var wire 1 3 i_in0 $end
$var wire 1 4 i_in1 $end
$var wire 1 % i_sel $end
$var wire 1 5 w_mux_out $end
$var reg 1 6 o_out $end
$upscope $end
$scope module u_mux_dff_3 $end
$var wire 1 # i_clk $end
$var wire 1 7 i_in0 $end
$var wire 1 8 i_in1 $end
$var wire 1 % i_sel $end
$var wire 1 9 w_mux_out $end
$var reg 1 : o_out $end
$upscope $end
$scope module u_mux_dff_4 $end
$var wire 1 # i_clk $end
$var wire 1 ; i_in0 $end
$var wire 1 < i_in1 $end
$var wire 1 % i_sel $end
$var wire 1 = w_mux_out $end
$var reg 1 > o_out $end
$upscope $end
$scope module u_mux_dff_5 $end
$var wire 1 # i_clk $end
$var wire 1 ? i_in0 $end
$var wire 1 @ i_in1 $end
$var wire 1 % i_sel $end
$var wire 1 A w_mux_out $end
$var reg 1 B o_out $end
$upscope $end
$scope module u_mux_dff_6 $end
$var wire 1 # i_clk $end
$var wire 1 C i_in0 $end
$var wire 1 D i_in1 $end
$var wire 1 % i_sel $end
$var wire 1 E w_mux_out $end
$var reg 1 F o_out $end
$upscope $end
$scope module u_mux_dff_7 $end
$var wire 1 # i_clk $end
$var wire 1 G i_in0 $end
$var wire 1 H i_in1 $end
$var wire 1 % i_sel $end
$var wire 1 I w_mux_out $end
$var reg 1 J o_out $end
$upscope $end
$upscope $end
$scope task init $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xJ
xI
0H
xG
xF
xE
0D
xC
xB
xA
0@
x?
x>
x=
0<
x;
x:
x9
08
x7
x6
x5
04
x3
x2
x1
00
x/
x.
0-
0,
bx +
b0 *
b0 )
b1011100010111101110110011000110110010000101111011100110110100001101001011001100111010001011111011100100110010101100111011010010111001101110100011001010111001000101110011101100110001101100100 (
b1001001011011100110100101110100 '
0&
0%
b0 $
0#
bx "
x!
$end
#5000
01
0/
bx0 "
bx0 +
0.
1#
#10000
1-
14
1@
0#
b1 )
1&
b100100 $
b100100 *
b10100110110010101110010011010010110000101101100001011010111010001101111001011010101000001100001011100100110000101101100011011000110010101101100 '
#15000
05
11
03
1/
02
bx01 "
bx01 +
1.
1#
#20000
1,
04
18
0@
0#
b10 )
b1001 $
b1001 *
#25000
15
09
13
07
12
bx011 "
bx011 +
06
1#
#30000
14
0#
b11 )
b1101 $
b1101 *
#35000
0=
19
0;
17
0:
bx0111 "
bx0111 +
16
1#
#40000
0-
08
1@
1D
0#
b100 )
0&
b1100101 $
b1100101 *
#45000
01
1=
0A
0/
1;
0?
0.
1:
bx01110 "
bx01110 +
0>
1#
#50000
1-
04
0@
0D
0#
b101 )
1&
b1 $
b1 *
#55000
0E
1A
05
11
0C
1?
03
1/
0B
1>
02
bx011101 "
bx011101 +
1.
1#
#60000
0,
10
14
1<
1@
1D
0#
b110 )
b1110110 $
b1110110 *
#65000
15
09
1E
0I
13
07
1C
0G
12
06
1B
bx0111011 "
bx0111011 +
0F
1#
#70000
0-
1,
00
18
0<
1H
0#
b111 )
0&
b11101101 $
b11101101 *
#75000
1I
0=
19
01
0!
1G
0;
17
0/
0J
1F
0:
16
b1110110 "
b1110110 +
0.
1#
#80000
04
1<
0#
b1000 )
b11111001 $
b11111001 *
#85000
05
1=
0A
03
1;
0?
1!
02
1:
0>
b11101100 "
b11101100 +
1J
1#
#90000
14
08
0<
0@
0#
b1001 )
b11000101 $
b11000101 *
#95000
0E
1A
09
0C
1?
07
0B
1>
b11011000 "
b11011000 +
06
1#
#100000
1-
1@
0#
b1010 )
1&
b11100101 $
b11100101 *
#105000
11
0=
1E
0I
1/
0;
1C
0G
1.
0:
1B
b10110001 "
b10110001 +
0F
1#
#110000
0-
1=
0A
0E
0,
10
04
1<
0@
0D
0H
11
05
0I
0#
b0 )
b10010 $
b10010 *
1%
b1001001011011100111000001110101011101000010000001010000011000010111001001100001011011000110110001100101011011000010000001000100011000010111010001100001 '
#115000
0!
0C
13
0/
0J
0B
12
b10010 "
b10010 +
0.
1#
#120000
1@
1D
1H
01
15
0=
1A
0#
b1 )
0&
b11110010 $
b11110010 *
0%
b10100000110000101110010011000010110110001101100011001010110110000101101011101000110111100101101010100110110010101110010011010010110000101101100 '
#125000
05
19
0A
1E
03
17
0?
1C
02
16
0>
b100100 "
b100100 +
1B
1#
#130000
1-
00
18
0<
0#
b10 )
1&
b11101000 $
b11101000 *
#135000
1I
0E
1=
09
11
1G
0C
1;
07
1/
1F
0B
1:
06
b1001001 "
b1001001 +
1.
1#
#140000
14
1<
0@
0H
0#
b11 )
b1011100 $
b1011100 *
#145000
15
0=
1A
0I
13
0;
1?
0G
1!
12
0:
1>
0F
b10010011 "
b10010011 +
1J
1#
#150000
1,
0<
1@
0D
0#
b100 )
b101101 $
b101101 *
#155000
1E
0A
19
0!
1C
0?
17
0J
1B
0>
b100111 "
b100111 +
16
1#
#160000
0-
10
04
08
1D
0#
b101 )
0&
b1100011 $
b1100011 *
#165000
01
1=
0E
1I
0/
1;
0C
1G
0.
1:
0B
b1001110 "
b1001110 +
1F
1#
#170000
0,
00
0@
0D
1H
0#
b110 )
b10000000 $
b10000000 *
#175000
0I
1A
05
1!
0G
1?
03
1J
0F
1>
b10011100 "
b10011100 +
02
1#
#180000
1-
10
18
1@
0#
b111 )
1&
b10101010 $
b10101010 *
#185000
11
09
1E
1/
07
1C
0!
1.
06
1B
b111001 "
b111001 +
0J
1#
#190000
14
08
1<
0@
0#
b1000 )
b10010110 $
b10010110 *
#195000
1I
0=
15
1G
0;
13
1F
0:
b1110011 "
b1110011 +
12
1#
#200000
1,
00
18
0<
0H
0#
b1001 )
b1101 $
b1101 *
#205000
19
0A
17
0?
1!
16
0>
b11100111 "
b11100111 +
1J
1#
#210000
10
04
1@
1D
0#
b1010 )
b1101011 $
b1101011 *
