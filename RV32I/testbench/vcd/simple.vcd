$version Generated by VerilatedVcd $end
$date Tue Aug  6 15:14:14 2024
 $end
$timescale   1ps $end

 $scope module TOP $end
  $var wire  1 [! i_clk $end
  $var wire  1 \! i_rstn $end
  $var wire 32 V! o_riscv_dmem_addr [31:0] $end
  $var wire  4 X! o_riscv_dmem_byte_sel [3:0] $end
  $var wire 32 Z! o_riscv_dmem_rd_data [31:0] $end
  $var wire 32 Y! o_riscv_dmem_wr_data [31:0] $end
  $var wire  1 W! o_riscv_dmem_wr_en $end
  $var wire 32 U! o_riscv_imem_instr [31:0] $end
  $var wire 32 T! o_riscv_imem_pc [31:0] $end
  $scope module riscv_top $end
   $var wire 32 n! REGISTER_INIT [31:0] $end
   $var wire  1 [! i_clk $end
   $var wire  1 \! i_rstn $end
   $var wire 32 V! o_riscv_dmem_addr [31:0] $end
   $var wire  4 X! o_riscv_dmem_byte_sel [3:0] $end
   $var wire 32 Z! o_riscv_dmem_rd_data [31:0] $end
   $var wire 32 Y! o_riscv_dmem_wr_data [31:0] $end
   $var wire  1 W! o_riscv_dmem_wr_en $end
   $var wire 32 U! o_riscv_imem_instr [31:0] $end
   $var wire 32 T! o_riscv_imem_pc [31:0] $end
   $scope module u_riscv_cpu $end
    $var wire 32 n! REGISTER_INIT [31:0] $end
    $var wire  4 +! alu_ctrl [3:0] $end
    $var wire  1 &! alu_zero $end
    $var wire 32 ,! dmem_addr [31:0] $end
    $var wire  4 a! dmem_byte_sel [3:0] $end
    $var wire 32 _! dmem_rd_data [31:0] $end
    $var wire 32 -! dmem_wr_data [31:0] $end
    $var wire  1 `! dmem_wr_en $end
    $var wire  1 [! i_clk $end
    $var wire 32 Z! i_cpu_dmem_rd_data [31:0] $end
    $var wire 32 U! i_cpu_imem_instr [31:0] $end
    $var wire  1 \! i_rstn $end
    $var wire 32 V! o_cpu_dmem_addr [31:0] $end
    $var wire  4 X! o_cpu_dmem_byte_sel [3:0] $end
    $var wire 32 Y! o_cpu_dmem_wr_data [31:0] $end
    $var wire  1 W! o_cpu_dmem_wr_en $end
    $var wire 32 T! o_cpu_imem_pc [31:0] $end
    $var wire  1 ^! reg_wr_en $end
    $var wire  1 ]! src_alu_a $end
    $var wire  1 *! src_alu_b $end
    $var wire  3 '! src_imm [2:0] $end
    $var wire  2 (! src_pc [1:0] $end
    $var wire  2 )! src_rd [1:0] $end
    $scope module u_riscv_ctrl $end
     $var wire 256 K! DEBUG_INSTR [255:0] $end
     $var wire  1 &! i_ctrl_alu_zero $end
     $var wire  3 i! i_ctrl_funct3 [2:0] $end
     $var wire  1 j! i_ctrl_funct7_5b $end
     $var wire  7 h! i_ctrl_opcode [6:0] $end
     $var wire  4 +! o_ctrl_alu_ctrl [3:0] $end
     $var wire  4 a! o_ctrl_mem_byte_sel [3:0] $end
     $var wire  1 `! o_ctrl_mem_wr_en $end
     $var wire  1 ^! o_ctrl_reg_wr_en $end
     $var wire  1 ]! o_ctrl_src_alu_a $end
     $var wire  1 *! o_ctrl_src_alu_b $end
     $var wire  3 '! o_ctrl_src_imm [2:0] $end
     $var wire  2 (! o_ctrl_src_pc [1:0] $end
     $var wire  2 )! o_ctrl_src_rd [1:0] $end
     $var wire  1 k! take_branch $end
    $upscope $end
    $scope module u_riscv_datapath $end
     $var wire 32 n! REGISTER_INIT [31:0] $end
     $var wire 32 1! alu_a [31:0] $end
     $var wire 32 2! alu_b [31:0] $end
     $var wire 32 ,! alu_result [31:0] $end
     $var wire  1 [! i_clk $end
     $var wire  4 +! i_dp_alu_ctrl [3:0] $end
     $var wire 32 U! i_dp_instr [31:0] $end
     $var wire 32 _! i_dp_mem_rd_data [31:0] $end
     $var wire  1 ^! i_dp_reg_wr_en $end
     $var wire  1 ]! i_dp_src_alu_a $end
     $var wire  1 *! i_dp_src_alu_b $end
     $var wire  3 '! i_dp_src_imm [2:0] $end
     $var wire  2 (! i_dp_src_pc [1:0] $end
     $var wire  2 )! i_dp_src_rd [1:0] $end
     $var wire  1 \! i_rstn $end
     $var wire 32 0! immediate [31:0] $end
     $var wire 64 :! mux_concat_alu_a [63:0] $end
     $var wire 64 <! mux_concat_alu_b [63:0] $end
     $var wire 96 3! mux_concat_pc [95:0] $end
     $var wire 128 6! mux_concat_rd [127:0] $end
     $var wire  1 &! o_dp_alu_zero $end
     $var wire 32 ,! o_dp_mem_addr [31:0] $end
     $var wire 32 -! o_dp_mem_wr_data [31:0] $end
     $var wire 32 T! o_dp_pc [31:0] $end
     $var wire 32 .! pc_next [31:0] $end
     $var wire 32 b! pc_plus_4 [31:0] $end
     $var wire 32 c! pc_plus_imm [31:0] $end
     $var wire 32 /! regfile_rd_data [31:0] $end
     $var wire 32 d! regfile_rs1_data [31:0] $end
     $var wire 32 -! regfile_rs2_data [31:0] $end
     $scope module u_riscv_adder_pc_plus_4 $end
      $var wire 32 T! i_adder_a [31:0] $end
      $var wire 32 q! i_adder_b [31:0] $end
      $var wire 32 b! o_adder_sum [31:0] $end
     $upscope $end
     $scope module u_riscv_adder_pc_plus_imm $end
      $var wire 32 T! i_adder_a [31:0] $end
      $var wire 32 0! i_adder_b [31:0] $end
      $var wire 32 c! o_adder_sum [31:0] $end
     $upscope $end
     $scope module u_riscv_alu $end
      $var wire 64 A! DEBUG_ALU_OP [63:0] $end
      $var wire 32 1! i_alu_a [31:0] $end
      $var wire 32 2! i_alu_b [31:0] $end
      $var wire  4 +! i_alu_ctrl [3:0] $end
      $var wire 32 ,! o_alu_result [31:0] $end
      $var wire  1 &! o_alu_zero $end
     $upscope $end
     $scope module u_riscv_immext $end
      $var wire 32 U! i_imm_instr [31:0] $end
      $var wire  3 '! i_imm_src [2:0] $end
      $var wire 32 0! o_imm_ext [31:0] $end
     $upscope $end
     $scope module u_riscv_mux_alu_a $end
      $var wire 32 r! N_MUX_IN [31:0] $end
      $var wire 64 :! i_mux_concat_data [63:0] $end
      $var wire  1 ]! i_mux_sel [0:0] $end
      $var wire 32 C! mux_input_arr(0) [31:0] $end
      $var wire 32 D! mux_input_arr(1) [31:0] $end
      $var wire 32 1! o_mux_data [31:0] $end
     $upscope $end
     $scope module u_riscv_mux_alu_b $end
      $var wire 32 r! N_MUX_IN [31:0] $end
      $var wire 64 <! i_mux_concat_data [63:0] $end
      $var wire  1 *! i_mux_sel [0:0] $end
      $var wire 32 E! mux_input_arr(0) [31:0] $end
      $var wire 32 F! mux_input_arr(1) [31:0] $end
      $var wire 32 2! o_mux_data [31:0] $end
     $upscope $end
     $scope module u_riscv_mux_pc $end
      $var wire 32 o! N_MUX_IN [31:0] $end
      $var wire 96 3! i_mux_concat_data [95:0] $end
      $var wire  2 (! i_mux_sel [1:0] $end
      $var wire 32 >! mux_input_arr(0) [31:0] $end
      $var wire 32 ?! mux_input_arr(1) [31:0] $end
      $var wire 32 @! mux_input_arr(2) [31:0] $end
      $var wire 32 .! o_mux_data [31:0] $end
     $upscope $end
     $scope module u_riscv_mux_regfile_rd_data $end
      $var wire 32 s! N_MUX_IN [31:0] $end
      $var wire 128 6! i_mux_concat_data [127:0] $end
      $var wire  2 )! i_mux_sel [1:0] $end
      $var wire 32 G! mux_input_arr(0) [31:0] $end
      $var wire 32 H! mux_input_arr(1) [31:0] $end
      $var wire 32 I! mux_input_arr(2) [31:0] $end
      $var wire 32 J! mux_input_arr(3) [31:0] $end
      $var wire 32 /! o_mux_data [31:0] $end
     $upscope $end
     $scope module u_riscv_regfile $end
      $var wire  1 [! i_clk $end
      $var wire  5 g! i_regfile_rd_addr [4:0] $end
      $var wire 32 /! i_regfile_rd_data [31:0] $end
      $var wire  1 ^! i_regfile_rd_wen $end
      $var wire  5 e! i_regfile_rs1_addr [4:0] $end
      $var wire  5 f! i_regfile_rs2_addr [4:0] $end
      $var wire 32 d! o_regfile_rs1_data [31:0] $end
      $var wire 32 -! o_regfile_rs2_data [31:0] $end
      $var wire 32 c registers(0) [31:0] $end
      $var wire 32 d registers(1) [31:0] $end
      $var wire 32 m registers(10) [31:0] $end
      $var wire 32 n registers(11) [31:0] $end
      $var wire 32 o registers(12) [31:0] $end
      $var wire 32 p registers(13) [31:0] $end
      $var wire 32 q registers(14) [31:0] $end
      $var wire 32 r registers(15) [31:0] $end
      $var wire 32 s registers(16) [31:0] $end
      $var wire 32 t registers(17) [31:0] $end
      $var wire 32 u registers(18) [31:0] $end
      $var wire 32 v registers(19) [31:0] $end
      $var wire 32 e registers(2) [31:0] $end
      $var wire 32 w registers(20) [31:0] $end
      $var wire 32 x registers(21) [31:0] $end
      $var wire 32 y registers(22) [31:0] $end
      $var wire 32 z registers(23) [31:0] $end
      $var wire 32 { registers(24) [31:0] $end
      $var wire 32 | registers(25) [31:0] $end
      $var wire 32 } registers(26) [31:0] $end
      $var wire 32 ~ registers(27) [31:0] $end
      $var wire 32 !! registers(28) [31:0] $end
      $var wire 32 "! registers(29) [31:0] $end
      $var wire 32 f registers(3) [31:0] $end
      $var wire 32 #! registers(30) [31:0] $end
      $var wire 32 $! registers(31) [31:0] $end
      $var wire 32 g registers(4) [31:0] $end
      $var wire 32 h registers(5) [31:0] $end
      $var wire 32 i registers(6) [31:0] $end
      $var wire 32 j registers(7) [31:0] $end
      $var wire 32 k registers(8) [31:0] $end
      $var wire 32 l registers(9) [31:0] $end
     $upscope $end
     $scope module u_riscv_register_pc $end
      $var wire 32 n! REGISTER_INIT [31:0] $end
      $var wire  1 [! i_clk $end
      $var wire 32 .! i_register_d [31:0] $end
      $var wire  1 p! i_register_en $end
      $var wire  1 \! i_rstn $end
      $var wire 32 T! o_register_q [31:0] $end
     $upscope $end
    $upscope $end
    $scope module u_riscv_dmem_interface $end
     $var wire 32 S! byte_aligned_dmem_rd_data [31:0] $end
     $var wire 32 ,! i_dmem_intf_addr [31:0] $end
     $var wire  4 a! i_dmem_intf_byte_sel [3:0] $end
     $var wire  3 i! i_dmem_intf_func3 [2:0] $end
     $var wire 32 Z! i_dmem_intf_rd_data [31:0] $end
     $var wire  1 `! i_dmem_intf_wen $end
     $var wire 32 -! i_dmem_intf_wr_data [31:0] $end
     $var wire 32 V! o_dmem_intf_addr [31:0] $end
     $var wire  4 X! o_dmem_intf_byte_sel [3:0] $end
     $var wire 32 _! o_dmem_intf_rd_data [31:0] $end
     $var wire  1 W! o_dmem_intf_wen $end
     $var wire 32 Y! o_dmem_intf_wr_data [31:0] $end
    $upscope $end
   $upscope $end
   $scope module u_riscv_dmem $end
    $var wire 1024 C FILE_DATA_MIF [1023:0] $end
    $var wire 32 %! i [31:0] $end
    $var wire  1 [! i_clk $end
    $var wire 14 m! i_dmem_addr [13:0] $end
    $var wire  4 X! i_dmem_byte_sel [3:0] $end
    $var wire 32 Y! i_dmem_data [31:0] $end
    $var wire  1 W! i_dmem_wr_en $end
    $var wire 32 Z! o_dmem_data [31:0] $end
   $upscope $end
   $scope module u_riscv_imem $end
    $var wire 1024 # FILE_TEXT_MIF [1023:0] $end
    $var wire 14 l! i_imem_addr [13:0] $end
    $var wire 32 U! o_imem_data [31:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b
b
b00000000000000000000000000000000 c
b00000000000000000000000000000000 d
b00000000000000000000000000000000 e
b00000000000000000000000000000000 f
b00000000000000000000000000000000 g
b00000000000000000000000000000000 h
b00000000000000000000000000000000 i
b00000000000000000000000000000000 j
b00000000000000000000000000000000 k
b00000000000000000000000000000000 l
b00000000000000000000000000000000 m
b00000000000000000000000000000000 n
b00000000000000000000000000000000 o
b00000000000000000000000000000000 p
b00000000000000000000000000000000 q
b00000000000000000000000000000000 r
b00000000000000000000000000000000 s
b00000000000000000000000000000000 t
b00000000000000000000000000000000 u
b00000000000000000000000000000000 v
b00000000000000000000000000000000 w
b00000000000000000000000000000000 x
b00000000000000000000000000000000 y
b00000000000000000000000000000000 z
b00000000000000000000000000000000 {
b00000000000000000000000000000000 |
b00000000000000000000000000000000 }
b00000000000000000000000000000000 ~
b00000000000000000000000000000000 !!
b00000000000000000000000000000000 "!
b00000000000000000000000000000000 #!
b00000000000000000000000000000000 $!
b00000000000000000000000000000000 %!
0&!
b001 '!
b00 (!
b00 )!
1*!
b0000 +!
b11111111111111111111111111110000 ,!
b00000000000000000000000000000000 -!
b00000000000000000000000000000100 .!
b11111111111111111111111111110000 /!
b11111111111111111111111111110000 0!
b00000000000000000000000000000000 1!
b11111111111111111111111111110000 2!
b111111111111111111111111111100001111111111111111111111111111000000000000000000000000000000000100 3!
b11111111111111111111111111110000000000000000000000000000000001000000000000000000000000000000000011111111111111111111111111110000 6!
b0000000000000000000000000000000000000000000000000000000000000000 :!
b1111111111111111111111111111000000000000000000000000000000000000 <!
b00000000000000000000000000000100 >!
b11111111111111111111111111110000 ?!
b11111111111111111111111111110000 @!
b0000000000000000000000000000000001000001010001000100010000001001 A!
b00000000000000000000000000000000 C!
b00000000000000000000000000000000 D!
b00000000000000000000000000000000 E!
b11111111111111111111111111110000 F!
b11111111111111111111111111110000 G!
b00000000000000000000000000000000 H!
b00000000000000000000000000000100 I!
b11111111111111111111111111110000 J!
b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100001011001000110010001101001 K!
b00000000000000000000000000000000 S!
b00000000000000000000000000000000 T!
b11111111000000000000010100010011 U!
b11111111111111111111111111110000 V!
0W!
b1111 X!
b00000000000000000000000000000000 Y!
b00000000000000000000000000000000 Z!
1[!
0\!
0]!
1^!
b00000000000000000000000000000000 _!
0`!
b1111 a!
b00000000000000000000000000000100 b!
b11111111111111111111111111110000 c!
b00000000000000000000000000000000 d!
b00000 e!
b10000 f!
b01010 g!
b0010011 h!
b000 i!
1j!
0k!
b00000000000000 l!
b11111111111100 m!
b00000000000000000000000000000000 n!
b00000000000000000000000000000011 o!
1p!
b00000000000000000000000000000100 q!
b00000000000000000000000000000010 r!
b00000000000000000000000000000100 s!
#1
0[!
#2
b11111111111111111111111111110000 m
1[!
#3
0[!
#4
1[!
#5
0[!
#6
1[!
#7
0[!
#8
1[!
#9
0[!
#10
1[!
#11
0[!
1\!
#12
b00000000000000000000000000000001 ,!
b00000000000000000000000000001000 .!
b00000000000000000000000000000001 /!
b00000000000000000000000000000001 0!
b00000000000000000000000000000001 2!
b000000000000000000000000000000010000000000000000000000000000010100000000000000000000000000001000 3!
b00000000000000000000000000000001000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000001 6!
b0000000000000000000000000000010000000000000000000000000000000000 :!
b0000000000000000000000000000000100000000000000000000000000000000 <!
b00000000000000000000000000001000 >!
b00000000000000000000000000000101 ?!
b00000000000000000000000000000001 @!
b00000000000000000000000000000100 D!
b00000000000000000000000000000001 F!
b00000000000000000000000000000001 G!
b00000000000000000000000000001000 I!
b00000000000000000000000000000001 J!
b00000000000000000000000000000100 T!
b00000000000100000000010110010011 U!
b00000000000000000000000000000001 V!
b1110 X!
1[!
b00000000000000000000000000001000 b!
b00000000000000000000000000000101 c!
b00001 f!
b01011 g!
0j!
b00000000000001 l!
b00000000000000 m!
#13
0[!
#14
b00000000000000000000000000000001 n
b010 '!
b11111111111111111111111111110000 ,!
b00000000000000000000000000000001 -!
b00000000000000000000000000001100 .!
b11111111111111111111111111110000 /!
b00000000000000000000000000000000 0!
b11111111111111111111111111110000 1!
b00000000000000000000000000000000 2!
b111111111111111111111111111100000000000000000000000000000000100000000000000000000000000000001100 3!
b00000000000000000000000000000000000000000000000000000000000011000000000000000000000000000000000011111111111111111111111111110000 6!
b0000000000000000000000000000100011111111111111111111111111110000 :!
b0000000000000000000000000000000000000000000000000000000000000001 <!
b00000000000000000000000000001100 >!
b00000000000000000000000000001000 ?!
b11111111111111111111111111110000 @!
b11111111111111111111111111110000 C!
b00000000000000000000000000001000 D!
b00000000000000000000000000000001 E!
b00000000000000000000000000000000 F!
b11111111111111111111111111110000 G!
b00000000000000000000000000001100 I!
b00000000000000000000000000000000 J!
b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111001101110111 K!
b00000000000000000000000000001000 T!
b00000000101101010010000000100011 U!
b11111111111111111111111111110000 V!
1W!
b1111 X!
b00000000000000000000000000000001 Y!
1[!
0^!
1`!
b00000000000000000000000000001100 b!
b00000000000000000000000000001000 c!
b11111111111111111111111111110000 d!
b01010 e!
b01011 f!
b00000 g!
b0100011 h!
b010 i!
b00000000000010 l!
b11111111111100 m!
#15
0[!
